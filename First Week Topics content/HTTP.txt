HTTP (Hypertext transfer protocol)

DEFINITION
	* An application protocol for distributed, collaborative,and hypermedia information systems.
	* HTTP is the foundation of data communication for the 	World Wide Web.
	* Development of HTTP was initiated by Tim Berners-Lee at CERN in 1989.
	* Jointly developed by the W3C (World Wide Web Consortium) and the IETF (Internet Engineering Task Force)
	* HTTP is stateless communication protocol, which means that it doesn't take information about clients in between request. 
	* This is based on client-server architecture or a request-response standard, wherein the clients sends an HTTP request to a server and the server replies with a response message.
	* HTTP typically runs on top of TCP/IP using port 80 by default while port 443 for HTTPS.


VERSION HISTORY
HTTP 0.9 One line Protocol 
	* The original HTTP proposal by Tim Berners-Lee was	designed with simplicity in mind as to help with the adoption of his other nascent idea: the World Wide Web.  
	* 1991. Berners-Lee outlined the motivation for the new protocol and listed several high-level design goals: file transfer functionality, ability to request an index search of a hypertext archive, format negotiation, and an ability to refer the client to another server.
HTTP 1: Rapid Growth and Informational RFC 
 	* The period from 1991 to 1995. A new breed of software	known as a "web browser" and the emergence and quick growth of the consumer-oriented public Internet infrastructure. 
	* They	needed a protocol that could serve more than just hypertext documents, provide richer metadata about the request and the response, enable content negotiation, and more. 
	HTTP 1.1: Internet Standard
	* This resolved a lot of the protocol ambiguities found in earlier versions and introduced a number of critical performance optimizations: keepalive connections, chunked encoding transfers, byte-range requests, additional caching mechanisms, transfer encodings, and request pipelining.
	* It also added content, encoding, character set, and even language negotiation, transfer encoding, caching directives, client cookies, plus a dozen other capabilities that can be negotiated on each request.

HTTP resources are identified using URIs (specifically, HTTP URLs)
  -Scheme (http: or https:)
  -(optional) authentication information
  -Host and (optional) port number
  -Path (resolved to the document root on the server) to the resource
  -(optional) scheme-specific parameters
  -(optional) URL-encoded query
  -(optional) bookmark (or fragment identifier)

HTTP is based on client-server architecture

-Clients, aka User Agents(UA) 
  -web browsers, web crawlers, email clients,other end user tools and applications
-Servers
  -Origin servers, proxy servers, gateways, tunnels

HTTP uses a request-response standard protocol
  -The client sends an HTTP request message to the server
  -The server processes the request and replies with an HHTP response message

HTTP is a stateless communication protocol
  -Servers do not keep information about clients in between requests
  -Web applications effect session tracking using mechanism such as cookies on
URL-encoded session information to keep track of related client requests

HTTP provides support for other functionalities such as cache control, content media
type (MIME) specification, language and character set specification, content/transfer
coding, client-server protocol negotiations, persistent connections, request pipelining,
etc.	

REFERENCES:
Hypertext Transfer Protocol (n.d.). Retrieved from https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol
HTTP Tutorial(n.d.). Retrieved from https://www.tutorialspoint.com/http/
Grigorik, I.(2013). Brief History of HTTP. Retrieved from https://hpbn.co/brief-history-of-http/
