BOOLEAN - the boolean object is an object wrapper for a boolean value.

Syntax
	new Boolean ([value])
Parameters
	value - optional. The initial value of the Boolean object.
Description
	The value passed as the first parameter is converted to a boolean value, if necessary. If the value is omitted or is 0, -0, null, false, NaN, undefined, or the empty string (""), the object has an initial value of false. If the DOM object document.all is passed as a parameter, the new boolean object also has an initial value of false. All other values, including any object or the string "false", create an object with an initial value of true.

Boolean primitive value (true and false ) is not same as boolean object values (true and false).


DATE - The Date object has a large number of methods for setting, getting, and manipulating dates. It does not have any properties.The Date object range is -100,000,000 days to 100,000,000 days relative to 01 January, 1970 UTC.

Syntax
	dateObjectName = new Date([parameters])
	new Date();
	new Date(value);
	new Date(dateString);
	new Date(year, month[, date[, hours[, minutes[, second[,milliseconds]]]]]);
Parameters
	today = new Date()
Description
	The JavaScript date is based on a time value that is milliseconds since midnight 01 January, 1970 UTC. A day holds 86,400,000 milliseconds. The JavaScript Date object range is -100,000,000 days to 100,000,000 days relative to 01 January, 1970 UTC.
	

MATH - Math is a built-in object that has properties and methods for mathematical constants and functions. Not a function object.

Description
	nlike the other global objects, Math is not a constructor. All properties and methods of Math are static. You refer to the constant pi as Math.PI and you call the sine function as Math.sin(x), where x is the method's argument. Constants are defined with the full precision of real numbers in JavaScript.


NUMBER - The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor.

Syntax
	new Number(value);
Parameters
	value - The numeric value of the object being created.	
Description
	The primary uses for the Number object are:

If the argument cannot be converted into a number, it returns NaN.
In a non-constructor context (i.e., without the new operator), Number can be used to perform a type conversion.

STRING - The String global object is a constructor for strings, or a sequence of characters.

Syntax
	String(thing)
Parameters
	thing - Anything to be converted to a string.
Description
	Strings are useful for holding data that can be represented in text form. Some of the most-used operations on strings are to check their length, to build and concatenate them using the + and += string operators, checking for the existence or location of substrings with the indexOf() method, or extracting substrings with the substring() method.


DATE - Composed of two Properties: Constructor and Prototype

Constructors - Specifies the function that creates an object's prototype. Javascript date constructor property returns a reference to the array function that created the instance's prototype. 

Syntax:
	date.constructor 

Example:	
	<script type="text/javascript"> 
		var dt = new Date(); 
		document.write("dt.constructor is : " + dt.constructor); 
	</script> 

    Output:
	dt.constructor is : function Date() { [native code] } 


Prototype - The prototype property allows you to add properties and methods to an object. The prototype property allows you to add properties and methods to any object (Number, Boolean, String, Date, etc.). 
	

Syntax:
	object.prototype.name = value 
Example:
	function book(title, author)
			{
				this.title = title;
				this.author = author;
			}
	
	<script type="text/javascript">
			var myBook = new book("Evolution of JAVA", "Helmsley");
			book.prototype.price=690;
			//myBook.price = 690;
			document.write("Book title is : " + myBook.title + "<br>");
			document.write("Book author is : " + myBook.author + "<br>");
			document.write("Book price is : " + myBook.price + "<br>");
	</script>

    Output:
	Book title is : Evolution of JAVA
	Book author is : Helmsley
	Book price is : 690

Date Objects:
	Methods				Value Range		Description

	dateObj.getDate()		    1-31		Date within the month
	dateobj.setDate()

	dateObj. getDay()		    0-6			Day of the Week
	dateObj. setDay()

	dateObj. getFullYear()		    1970-...		Get the four digit year (yyyy).
	dateObj. setFullYear()					Set the year

	dateObj. getHours()		    0-23		Hour of the day in 24-Hour time
	dateObj. setHours()

	dateObj. getMilliseconds()	    0-999		Milliseconds since the previous full second(NN4+,Mozl+,Ie3+)
	dateObj. setMilliseconds()

	dateObj. getMonth()		    0-11		Month within the year(January=0)
	dateObj. setMonth()

	dateObj.getSeconds()		    0-59		Second within the specified minute

	dateObj. getMinutes()		    0-59		Minute of the specified Hour
	dateObj. setMinutes()

	dateObj.getTime()		    0-…			Milliseconds since 1/1/70 00:00:00 GMT



REFERENCES:

Cary, D. (March 20, 2017). JavaScript, Standard built-in Objects. Retrieved from https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects

Crockford, D.(2002). A Survey of the JavaScript Programming Language. Retrieved from http://javascript.crockford.com/survey.html

Sameer M. et al. (October 18, 2015) Javascript Retrieved from https://www.slideshare.net/frayoshwadia/javascript-math-boolean-string-date