CSS Selectors

* Selector
    - Selectors are used as a condition in a CSS rule to determine which elements in the document tree are matched by the selector an are thus targeted by the formatting. The subjects of the selectors are elements.
    - Selectors can start with a universal(* or empty space) or a simple selector.

* Selectors syntax
    Defines a set of one or more sequence of simple selectors separated by combinators with one pseudo element possibly appended to the last sequence.

    i.e. dir(type)#abc(id)>(combinator)(child)p(type).xyz(class)[title]+(combinator)span(adjacent).last-of-type(pseudo element):after(pseudoelement)

* Sequence
    - A chain of simple selectors separated by combinators.
    - This always starts with a type selector or a universal selector.
    - This cannot contain other type selectors or universal selectors.

====
ATTRIBUTE SELECTORS
    - Targets an element based on a particular attribute.
    - Specifies attribute in brackets

    i.e.
    [class] {
        color: blue;
    }

Syntax:
[attr]
[attr=value]
[attr~=value] - defines a set from the set of values and separated by a space.
[attr|=value] - targets the lang attribute
[attr^=value] - beginning
[attr$=value] - end
[attr*=value] - contains


CLASS SELECTOR
    - Contains a period and a class name.
    - Takes the possibility that there are multiple classes affected by it.
    - Classes can be chained with the use of a class selector.
    - A chain can start with a universa or a type selector but cannot be more than one.

    i.e.
    .x {
    }

ID SELECTOR
    - The pound sign followed by an ID body.
    - Can be used as an attribute selector

    i.e.
    #bgio {
    }

PSEUDO CLASS SELECTORS
    - An implicit class associated with a target.

    TYPES:

    A) Link pseudo classes
        :link - not visited
        :visited

    B) User action pseudo classes
        :hover - hovering over something, usually called a rollover effect.
        :active - activate a particular element
        :focus - focus is moved to a particular element. i.e. form elements

    C) Target pseudo classes
        :target - used if the element targeted is using an ID.

    D) Language pseudo classes - allows the targeting of language classes.
        :lang

    E) UI elements status pseudo classes
        :enabled
        :disabled
        :checked
        :indeterminate

    F) Structural pseudo classes
        :root - root element
        :first-child - paragraphs which are first children
        :last-child
        :only-child
        :nth-child(<odd, even argument>)
        :nth-last-child - counted from the last child

        ** The children pseudo classes basis is the DOM tree, which is a structure built by the HTML tag structure. The tree is built in every browser which allows it to understand your HTML tag structure even if it isn't tagged properly.

        //Structural pseudo classes continued...
        :first-of-type
        :last-of-type
        :only-of-type
        :nth-of-last-type
        :empty

    G) Negation pseudo classes
        :not - used for simple selectors only. It can be placed in any of the other elements and would negate a content. If what it should modify is not specified, it will be read as a general selector and would affect the whole HTML document.


